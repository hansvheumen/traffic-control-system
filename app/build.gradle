/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.6/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'jvm-test-suite'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
    google()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.1'
    testImplementation 'org.mockito:mockito-inline:5.2.0'
    testImplementation 'org.mockito:mockito-junit-jupiter:5.2.0'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:31.1-jre'

    // https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j
    // implementation group: 'org.apache.logging.log4j', name: 'log4j', version: '2.20.0'
    // compile group: 'org.apache.logging.log4j', name: 'log4j', version: '2.20.0'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.20.0'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.20.0'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: '2.20.0'
  
}

application {
    // Define the main class for the application.
    mainClass = 'trafficcontrol.App'
}

// tasks.named('test') {
//     // Use JUnit Platform for unit tests.
//     useJUnitPlatform()
// }

// testing {
//     suites.getByName<JvmTestSuite>("test") {
//         useJUnitPlatform()
//     }
//     suites.create<JVMTestSuite>("integrationTest") {
        
//         dependencies {
//             // implementation("org.junit.jupiter:junit-jupiter:5.7.2")  //needed???
//             implementation(project(path))
//             implementation("commons-io:commons-io")
//         }
//         targets.all{}
//     }
// }

// testing {
//     suites {
//         val test by getting(JvmTestSuite::class) {
//             // We set the Junit version explicit using the version catalog.
//             useJUnitJupiter(libs.versions.junit)
//             dependencies {
//                 // We add extra dependencies needed for our tests.
//                 // We don't use the test prefix here as we are already
//                 // in a "test" context.
//                 // Other configurations like annotationProcessor, compileOnly
//                 // can be used here as well.
//                 // Here we refer to dependencies using the version catalog,
//                 // but we could use string values for example.
//                 implementation(libs.assertj.core)
//                 implementation(libs.datafaker)
//             }
//         }
//     }
// }

// sourceSets {
//     it {
//         java {
//             srcDirs = ['src/it/java']
//         }
//         resources {
//             srcDirs = ['src/it/resources']
//         }
//     }
// }

// sourceSets {
//     integrationTest {
//         java.srcDir "$projectDir/src/integration/groovy"
//         resources.srcDir "$projectDir/src/integration/resources"
//         compileClasspath += main.output + test.output
//         runtimeClasspath += main.output + test.output
//     }
// }


testing {
    suites { 
        test { 
            useJUnitJupiter()            
        }

        integrationTest(JvmTestSuite) { 
            dependencies {
                implementation project(path) 
            }

            targets { 
                all {
                    testTask.configure {
                        shouldRunAfter(test)
                    }
                }
            }
        }
    }
}

tasks.named('check') { 
    dependsOn(testing.suites.integrationTest)
}